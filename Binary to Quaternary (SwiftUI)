/* * * * * * * * * * * * * * * * * * * *
 *  Written by Matthew James McDonald  *
 * * * * * * * * * * * * * * * * * * * *
 *  FUNCTION BINARY TO QUARTERNARY     *
 * * * * * * * * * * * * * * * * * * * */

func bToQ(inputNum: String) -> String{
    
    var originalNumArray = Array(inputNum)
    var qNumArray = Array<String>()

    if originalNumArray.count % 2 == 1 {
            originalNumArray.insert("0", at: 0)
    }

    var i = 0

    while i < originalNumArray.count {
        let tempArray = [String(originalNumArray[i]), String(originalNumArray[i + 1])]
        let tempNum = tempArray[0] + tempArray[1]

        if tempNum == TWO_DIGIT_BINARY[0] {
            qNumArray.append("0")
        } else if tempNum == TWO_DIGIT_BINARY[1] {
            qNumArray.append("1")
        } else if tempNum == TWO_DIGIT_BINARY[2] {
            qNumArray.append("2")
        } else if tempNum == TWO_DIGIT_BINARY[3] {
            qNumArray.append("3")
        } else {
            outputMessageColour = Color.red
            return "Error with input."
        }

        i += 2
    }

    let qNum = qNumArray.joined()
    return qNum
}
